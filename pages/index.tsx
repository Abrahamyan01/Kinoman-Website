import Head from 'next/head';
import React, {Suspense} from 'react'
import { Container, Box, Stack } from '@mui/material';
import '../components/translate/i18next'
import MoviesList from '@/components/moviesList';
import Subscribe from '@/components/header/Subscribe'
import useRequest from '@/hooks/useRequest';
import Hero from '@/components/hero';
import { Movies } from '@/components/interfaces/movie';
import MyTitle from '@/components/content/myTitle';
import { toJS } from 'mobx';

import { rootStore } from '@/store/RootStore';
import { initializeStore, useStore } from '@/store/ssrStore';

export default function Home({initialMobxState}) {
  const store = useStore(initialMobxState, rootStore)

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />    
      </Head>
      <Suspense fallback={<div>Loading...</div>}>
      <main>
        <Hero />
        <Container maxWidth={false} sx={{ width: '77.5rem', mb:'1rem' }}>
          <Subscribe />
          <MyTitle text='Онлайн-кинотеатр Иви: фильмы в хорошем качестве всегда приносят настоящее удовольствие'/>
          <Stack direction='column' gap={1}>
          </Stack>
          <MoviesList movies={initialMobxState.moviesWithGenre1} title={'Драмы'} />
          <MoviesList movies={initialMobxState.moviesWithGenre2} title={'Комедии'} />
        </Container>

              
      </main>
      </Suspense>
    </>
  )
}


export async function getServerSideProps(context) {
  const store = initializeStore(null, rootStore)
  const baseUrl = `http://192.168.0.102:3003/info?genres=4&limit=15`
  const url2 = 'http://192.168.0.102:3003/info?genres=8&limit=15'

  const [moviesWithGenre1, moviesWithGenre2] = await Promise.all([
    fetch(baseUrl).then(res => res.json()),
    fetch(url2).then(res => res.json())
  ]);

  store.setMovies(moviesWithGenre1, 'moviesWithGenre1');
  store.setMovies(moviesWithGenre2, 'moviesWithGenre2');

  const initialMobxState = {
    moviesWithGenre1: store.moviesWithGenre1,
    moviesWithGenre2: store.moviesWithGenre2,

  };

  return {
    props: {
      initialMobxState
    },
  }
}


